# Generated by Django 2.2.7 on 2019-12-09 14:05

import auction.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Auction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polymer_id', models.IntegerField(verbose_name='Id полимера')),
                ('polymer_shortcode', models.CharField(blank=True, max_length=200, verbose_name='Марка полимера')),
                ('polymer_type', models.CharField(blank=True, max_length=200, verbose_name='Тип полимера')),
                ('polymer_type_id', models.IntegerField(blank=True, verbose_name='Id типа полимера')),
                ('polymer_plant', models.CharField(blank=True, max_length=200, null=True, verbose_name='Производитель полимера')),
                ('polymer_plant_id', models.IntegerField(blank=True, null=True, verbose_name='Id производителя полимера')),
                ('delivery', models.CharField(max_length=200, verbose_name='Поставка')),
                ('storage_location', models.CharField(max_length=200, verbose_name='Базис')),
                ('lot_size', models.FloatField(blank=True, null=True, validators=[auction.validators.validate_decimals], verbose_name='Объем лота')),
                ('payment_term', models.CharField(max_length=200, verbose_name='Способ оплаты')),
                ('step', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Шаг торга')),
                ('is_price_with_nds', models.BooleanField(blank=True, default=False, verbose_name='Цена на НДС')),
                ('start_bidding', models.DateTimeField(verbose_name='Начало аукциона')),
                ('end_bidding', models.DateTimeField(verbose_name='Конец аукциона')),
                ('fixation_duration', models.IntegerField(default=60, verbose_name='Продолжительность фиксации')),
                ('special_conditions', models.TextField(blank=True, null=True, verbose_name='Особые условия')),
                ('published_datetime', models.DateTimeField(blank=True)),
                ('is_finished', models.BooleanField(default=False, verbose_name='Аукцион закончен')),
                ('is_template', models.BooleanField(blank=True, default=False, verbose_name='Типовой аукцион')),
                ('template_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Название шаблона')),
                ('is_dev_bid', models.BooleanField(default=False, verbose_name='Для разработчиков')),
                ('is_apply_for_participation', models.BooleanField(blank=True, default=False, verbose_name='Есть ли подача заявок на участие')),
            ],
            options={
                'verbose_name': 'Аукцион',
                'verbose_name_plural': 'Аукционы',
            },
        ),
        migrations.CreateModel(
            name='AuctionBet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_amount', models.IntegerField()),
                ('total_amount', models.FloatField(blank=True, null=True, validators=[auction.validators.validate_decimals], verbose_name='Общее количество')),
                ('bet_price_per_tone', models.DecimalField(decimal_places=2, max_digits=9)),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=15)),
                ('is_winning_bet', models.BooleanField(default=False)),
                ('published_datetime', models.DateTimeField(blank=True)),
                ('end_fixation_datetime', models.DateTimeField(blank=True, null=True)),
                ('is_increased_bet', models.BooleanField(default=False)),
                ('is_deleted_bet', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Ставка',
                'verbose_name_plural': 'Ставки',
            },
        ),
        migrations.CreateModel(
            name='AuctionDeal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_amount', models.IntegerField()),
                ('total_amount', models.FloatField(blank=True, null=True, validators=[auction.validators.validate_decimals], verbose_name='Общее количество')),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=15)),
                ('pay_cheque', models.FileField(blank=True, null=True, upload_to='bidding_protocols/auctions/pdfs/', verbose_name='Файл платежа')),
                ('published_datetime', models.DateTimeField(blank=True)),
            ],
            options={
                'verbose_name': 'Сделка',
                'verbose_name_plural': 'Сделки',
            },
        ),
        migrations.CreateModel(
            name='AuctionSellerOffer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot_amount', models.IntegerField(verbose_name='Количество лотов')),
                ('total_amount', models.FloatField(blank=True, null=True, validators=[auction.validators.validate_decimals], verbose_name='Общее количество')),
                ('start_price_per_tone', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Стартовая ценна за тонну')),
                ('middle_price_per_tone', models.DecimalField(blank=True, decimal_places=2, max_digits=9, verbose_name='Стартовая ценна за тонну')),
                ('stop_price_per_tone', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True, verbose_name='Стоп ценна за тонну')),
                ('published_datetime', models.DateTimeField(blank=True)),
                ('is_closed_offer', models.BooleanField(default=False, verbose_name='Предложение закончено')),
                ('current_max_bet', models.IntegerField(default=0)),
                ('EXAMPLE_AUCTION', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='EXAMPLE_AUCTION.Auction')),
            ],
        ),
        migrations.CreateModel(
            name='AuctionParticipationOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EXAMPLE_AUCTION', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='EXAMPLE_AUCTION.Auction', verbose_name='Аукцион')),
            ],
        ),
    ]
